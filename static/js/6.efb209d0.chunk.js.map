{"version":3,"sources":["../../../src/index.ts","../../../src/select.tsx","../../../src/UpDown.tsx","components/SearchField/SearchFieldTitle.jsx","core/openTab.js","components/SearchField/SortField/SortField.jsx","components/SearchField/SearchFieldDate.jsx","components/SearchField/SearchFieldButton.jsx","components/SearchField/FilterField/FilterFieldAge.jsx","components/SearchField/FilterField/FilterFieldGenre.jsx","components/SearchField/FilterField/FilterField.jsx","components/SearchField/SearchField.jsx","components/ProductsCards/ProductsCards.jsx","pages/SerialsPage/SerialsPage.jsx"],"names":["SelectField","forwardRef","className","ref","cx","placeholder","value","Select","styles","useMultiStyleConfig","omitThemingProps","iconSize","split","rest","ownProps","useFormControl","rootStyles","width","height","position","color","fieldStyles","mergeWith","paddingEnd","_focus","zIndex","__css","h","minH","props","dataAttr","iconColor","icon","fontSize","DefaultIcon","viewBox","fill","d","IconWrapper","chakra","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","SelectIcon","children","clone","role","focusable","style","UpDownIcon","createIcon","displayName","SearchFieldTitle","text","borderTop","pt","mt","fontWeight","mb","openTab","setState","prevState","SortField","useState","tab","setTab","dispatch","useDispatch","p","bg","borderRadius","w","onClick","cursor","as","onChange","e","setSortAction","target","SearchFieldDate","from","to","currentDate","date","setDate","useEffect","filterReleaseAction","flexBasis","type","SearchFieldButton","id","variant","active","setActive","m","removeGenresFilterAction","addGenresFilterAction","removeAgeFilterAction","age","order","addAgeFilterAction","sortAgesFilterAction","FilterFieldAge","product","certification","useSelector","state","data","certificationMovies","certificationSerials","flexWrap","US","sort","a","b","map","item","idx","FilterFieldGenre","genres","genresMovies","genresSerials","genre","name","FilterField","dir","SearchField","search","release","isChanging","changing","minW","base","mr","disabled","window","scrollTo","searchRequestAction","colorScheme","ProductsCards","title","products","results","totalPages","total_pages","page","py","flexDir","flex","templateColumns","gap","ProductCard","Pagination","nextAction","currentPage","nextPageAction","prevAction","prevPageAction","SerialsPage","searchDefaultAction","pl","pb"],"mappings":"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","file":"static/js/6.efb209d0.chunk.js","sourcesContent":["export * from \"@chakra-ui/color-mode\"\nexport * from \"@chakra-ui/styled-system\"\nexport { keyframes } from \"@emotion/react\"\nexport type { Interpolation } from \"@emotion/react\"\nexport * from \"./hooks\"\nexport * from \"./system.types\"\nexport * from \"./providers\"\nexport { omitThemingProps } from \"./system.utils\"\nexport * from \"./system\"\nexport * from \"./forward-ref\"\nexport * from \"./use-style-config\"\nexport { shouldForwardProp } from \"./should-forward-prop\"\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, mergeWith, split, __DEV__, dataAttr } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface SelectFieldProps\n  extends Omit<HTMLChakraProps<\"select\">, Omitted> {\n  isDisabled?: boolean\n}\n\nexport const SelectField = forwardRef<SelectFieldProps, \"select\">(\n  (props, ref) => {\n    const { children, placeholder, className, ...rest } = props\n\n    return (\n      <chakra.select\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-select\", className)}\n      >\n        {placeholder && <option value=\"\">{placeholder}</option>}\n        {children}\n      </chakra.select>\n    )\n  },\n)\n\nif (__DEV__) {\n  SelectField.displayName = \"SelectField\"\n}\n\ninterface RootProps extends Omit<HTMLChakraProps<\"div\">, \"color\"> {}\n\ninterface SelectOptions extends FormControlOptions {\n  /**\n   * The border color when the select is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the select is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * If `true`, the select element will span the full width of its parent\n   *\n   * @deprecated\n   * This component defaults to 100% width,\n   * please use the props `maxWidth` or `width` to configure\n   */\n  isFullWidth?: boolean\n  /**\n   * The placeholder for the select. We render an `<option/>` element that has\n   * empty value.\n   *\n   * ```jsx\n   * <option value=\"\">{placeholder}</option>\n   * ```\n   */\n  placeholder?: string\n  /**\n   * The size (width and height) of the icon\n   */\n  iconSize?: string\n  /**\n   * The color of the icon\n   */\n  iconColor?: string\n}\n\nexport interface SelectProps\n  extends SelectFieldProps,\n    ThemingProps<\"Select\">,\n    SelectOptions {\n  /**\n   * Props to forward to the root `div` element\n   */\n  rootProps?: RootProps\n  /**\n   * The icon element to use in the select\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement<any>\n}\n\n/**\n * React component used to select one item from a list of options.\n */\nexport const Select = forwardRef<SelectProps, \"select\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Select\", props)\n\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    isFullWidth,\n    ...rest\n  } = omitThemingProps(props)\n\n  const [layoutProps, otherProps] = split(rest, layoutPropNames as any[])\n\n  const ownProps = useFormControl(otherProps)\n\n  const rootStyles: SystemStyleObject = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color,\n  }\n\n  const fieldStyles: SystemStyleObject = mergeWith({}, styles.field, {\n    paddingEnd: \"2rem\",\n    _focus: { zIndex: \"unset\" },\n  })\n\n  return (\n    <chakra.div\n      className=\"chakra-select__wrapper\"\n      __css={rootStyles}\n      {...layoutProps}\n      {...rootProps}\n    >\n      <SelectField\n        ref={ref}\n        height={h ?? height}\n        minH={minH ?? minHeight}\n        placeholder={placeholder}\n        {...ownProps}\n        __css={fieldStyles}\n      >\n        {props.children}\n      </SelectField>\n\n      <SelectIcon\n        data-disabled={dataAttr(ownProps.disabled)}\n        {...((iconColor || color) && { color: iconColor || color })}\n        __css={styles.icon}\n        {...(iconSize && { fontSize: iconSize })}\n      >\n        {icon}\n      </SelectIcon>\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Select.displayName = \"Select\"\n}\n\nexport const DefaultIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n    />\n  </svg>\n)\n\nconst IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n})\n\ninterface SelectIconProps extends HTMLChakraProps<\"div\"> {}\n\nconst SelectIcon: React.FC<SelectIconProps> = (props) => {\n  const { children = <DefaultIcon />, ...rest } = props\n\n  const clone = React.cloneElement(children as any, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    // force icon to adhere to `IconWrapper` styles\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\",\n    },\n  })\n\n  return (\n    <IconWrapper {...rest} className=\"chakra-select__icon-wrapper\">\n      {React.isValidElement(children) ? clone : null}\n    </IconWrapper>\n  )\n}\n\nif (__DEV__) {\n  SelectIcon.displayName = \"SelectIcon\"\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const UpDownIcon = createIcon({\n  displayName: \"UpDownIcon\",\n  viewBox: \"-1 -1 9 11\",\n  d:\n    \"M 3.5 0L 3.98809 -0.569442L 3.5 -0.987808L 3.01191 -0.569442L 3.5 0ZM 3.5 9L 3.01191 9.56944L 3.5 9.98781L 3.98809 9.56944L 3.5 9ZM 0.488094 3.56944L 3.98809 0.569442L 3.01191 -0.569442L -0.488094 2.43056L 0.488094 3.56944ZM 3.01191 0.569442L 6.51191 3.56944L 7.48809 2.43056L 3.98809 -0.569442L 3.01191 0.569442ZM -0.488094 6.56944L 3.01191 9.56944L 3.98809 8.43056L 0.488094 5.43056L -0.488094 6.56944ZM 3.98809 9.56944L 7.48809 6.56944L 6.51191 5.43056L 3.01191 8.43056L 3.98809 9.56944Z\",\n})\n","import React from \"react\";\r\nimport {Box} from \"@chakra-ui/react\";\r\n\r\nexport const SearchFieldTitle = ({ text }) => {\r\n  return (\r\n    <Box\r\n      color={\"rgba(29, 29, 29, 0.5);\"}\r\n      borderTop={\"1px solid #ccc\"}\r\n      pt={\"10px\"}\r\n      mt={\"10px\"}\r\n      fontWeight={\"400\"}\r\n      fontSize={\"16px\"}\r\n      mb={\"10px\"}\r\n    >\r\n      {text}\r\n    </Box>\r\n  );\r\n};\r\n","export const openTab = (setState) => {\r\n  setState((prevState) => !prevState);\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {Box, Flex, Select} from \"@chakra-ui/react\";\r\nimport {UpDownIcon} from \"@chakra-ui/icons\";\r\nimport {SearchFieldTitle} from \"../SearchFieldTitle\";\r\nimport {openTab} from \"../../../core/openTab\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setSortAction} from \"../../../features/modules/search/search.actions\";\r\n\r\nexport const SortField = () => {\r\n  const [tab, setTab] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTab = () => {\r\n    openTab(setTab);\r\n  };\r\n\r\n  const setSortValue = (e) => {\r\n    dispatch(setSortAction(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Box p={\"20px 15px\"} bg={\"#fff\"} borderRadius={\"10px\"} mb={\"20px\"}>\r\n      <Flex\r\n        w={\"100%\"}\r\n        justifyContent={\"space-between\"}\r\n        alignItems={\"center\"}\r\n        onClick={handleTab}\r\n        cursor={\"pointer\"}\r\n      >\r\n        <Box as={\"h4\"}>Sort</Box>\r\n        {<UpDownIcon />}\r\n      </Flex>\r\n      <Box d={tab ? \"block\" : \"none\"}>\r\n        <SearchFieldTitle text={\"Sort results by\"} />\r\n        <Select bg={\"gray.400\"} onChange={setSortValue}>\r\n          <option value=\"popularity.desc\">Popularity descending</option>\r\n          <option value=\"popularity.asc\">Popularity ascending</option>\r\n          <option value=\"vote_count.desc\">Rating descending</option>\r\n          <option value=\"vote_count.asc\">Rating ascending</option>\r\n          <option value=\"release_date.desc\">Release date descending</option>\r\n          <option value=\"release_date.asc\">Release date ascending</option>\r\n          <option value=\"original_title.desc\">Title A-Z</option>\r\n          <option value=\"original_title.asc\">Title Z-A</option>\r\n        </Select>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Flex, Input} from \"@chakra-ui/react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {filterReleaseAction} from \"../../features/modules/search/search.actions\";\r\nimport {currentDate} from \"../../core/currentDate\";\r\n\r\nexport const SearchFieldDate = () => {\r\n  const [date, setDate] = useState({ from: \"\", to: currentDate(1) });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterReleaseAction([date.from, date.to]));\r\n  }, [date]);\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems={\"center\"}>\r\n        <Box flexBasis={\"60px\"} fontSize={\"12px\"} fontWeight={\"400\"}>\r\n          from\r\n        </Box>\r\n        <Input\r\n          w={\"100%\"}\r\n          type={\"date\"}\r\n          onChange={(e) => setDate({ ...date, from: e.target.value })}\r\n        />\r\n      </Flex>\r\n\r\n      <Flex alignItems={\"center\"}>\r\n        <Box flexBasis={\"60px\"} fontSize={\"12px\"} fontWeight={\"400\"}>\r\n          to\r\n        </Box>\r\n        <Input\r\n          w={\"100%\"}\r\n          type={\"date\"}\r\n          value={date.to}\r\n          onChange={(e) => setDate({ ...date, to: e.target.value })}\r\n        />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"@chakra-ui/react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n  addAgeFilterAction,\r\n  addGenresFilterAction,\r\n  removeAgeFilterAction,\r\n  removeGenresFilterAction,\r\n  sortAgesFilterAction,\r\n} from \"../../features/modules/search/search.actions\";\r\n\r\nexport const SearchFieldButton = ({ text, id, variant }) => {\r\n  const [active, setActive] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGenres = () => {\r\n    if (!active) {\r\n      setActive(true);\r\n      dispatch(addGenresFilterAction(id));\r\n    } else {\r\n      setActive(false);\r\n      dispatch(removeGenresFilterAction(id));\r\n    }\r\n  };\r\n\r\n  const handleAge = () => {\r\n    if (!active) {\r\n      const age = { order: id, value: text };\r\n      setActive(true);\r\n      dispatch(addAgeFilterAction(age));\r\n      dispatch(sortAgesFilterAction());\r\n    } else {\r\n      setActive(false);\r\n      dispatch(removeAgeFilterAction(text));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant={active ? \"searchFieldActive\" : \"searchField\"}\r\n      m={\"0 5px 5px 0\"}\r\n      value={text}\r\n      onClick={variant === \"genres\" ? handleGenres : handleAge}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {SearchFieldButton} from \"../SearchFieldButton\";\r\nimport {Flex} from \"@chakra-ui/react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const FilterFieldAge = ({ product }) => {\r\n  const certification = useSelector((state) =>\r\n    product === \"movie\"\r\n      ? state.data.certificationMovies\r\n      : state.data.certificationSerials\r\n  );\r\n\r\n  return (\r\n    <Flex flexWrap={\"wrap\"}>\r\n      {certification &&\r\n        certification.US.sort((a, b) => a.order - b.order).map((item, idx) => (\r\n          <SearchFieldButton\r\n            key={idx}\r\n            id={item.order}\r\n            text={item.certification}\r\n            variant={\"age\"}\r\n          />\r\n        ))}\r\n    </Flex>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {SearchFieldButton} from \"../SearchFieldButton\";\r\nimport {Flex} from \"@chakra-ui/react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const FilterFieldGenre = ({ product }) => {\r\n  const genres = useSelector((state) =>\r\n    product === \"movie\" ? state.data.genresMovies : state.data.genresSerials\r\n  );\r\n\r\n  return (\r\n    <Flex flexWrap={\"wrap\"}>\r\n      {genres &&\r\n        genres.map((genre) => (\r\n          <SearchFieldButton\r\n            key={genre.id}\r\n            text={genre.name}\r\n            id={genre.id}\r\n            variant={\"genres\"}\r\n          />\r\n        ))}\r\n    </Flex>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {Box, Flex, Stack} from \"@chakra-ui/react\";\r\nimport {UpDownIcon} from \"@chakra-ui/icons\";\r\nimport {SearchFieldTitle} from \"../SearchFieldTitle\";\r\nimport {openTab} from \"../../../core/openTab\";\r\nimport {SearchFieldDate} from \"../SearchFieldDate\";\r\nimport {FilterFieldAge} from \"./FilterFieldAge\";\r\nimport {FilterFieldGenre} from \"./FilterFieldGenre\";\r\n\r\nexport const FilterField = ({ product }) => {\r\n  const [tab, setTab] = useState(false);\r\n\r\n  const handleTab = () => {\r\n    openTab(setTab);\r\n  };\r\n\r\n  return (\r\n    <Box p={\"20px 15px\"} bg={\"#fff\"} borderRadius={\"10px\"} mb={\"50px\"}>\r\n      <Flex\r\n        w={\"100%\"}\r\n        justifyContent={\"space-between\"}\r\n        alignItems={\"center\"}\r\n        onClick={handleTab}\r\n        cursor={\"pointer\"}\r\n      >\r\n        <Box as={\"h4\"}>Filter</Box>\r\n        {<UpDownIcon />}\r\n      </Flex>\r\n      <Box d={tab ? \"block\" : \"none\"}>\r\n        <Box mb={\"10px\"}>\r\n          <SearchFieldTitle text={\"Release dates\"} />\r\n          <Stack dir={\"column\"}>\r\n            <SearchFieldDate />\r\n          </Stack>\r\n        </Box>\r\n        <Box>\r\n          <SearchFieldTitle text={\"Genres\"} />\r\n          <FilterFieldGenre product={product} />\r\n        </Box>\r\n        <Box mb={\"10px\"}>\r\n          <SearchFieldTitle text={\"Certification\"} />\r\n          <FilterFieldAge product={product} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box, Button} from \"@chakra-ui/react\";\r\nimport {SortField} from \"./SortField/SortField\";\r\nimport {FilterField} from \"./FilterField/FilterField\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {searchRequestAction} from \"../../features/modules/search/search.actions\";\r\n\r\nexport const SearchField = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const sort = useSelector((state) => state.search.sort);\r\n  const release = useSelector((state) => state.search.release);\r\n  const genres = useSelector((state) => state.search.genres);\r\n  const certification = useSelector((state) => state.search.certification);\r\n  const isChanging = useSelector((state) => state.search.changing);\r\n\r\n  const handleSearch = () => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(\r\n      searchRequestAction(product, sort, release, genres, certification, 1)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      minW={{ base: \"100%\", \"2md\": \"260px\" }}\r\n      w={{ base: \"100%\", \"2md\": \"260px\" }}\r\n      color={\"black\"}\r\n      mr={{ base: \"0\", \"2md\": \"30px\" }}\r\n      mb={{ base: \"50px\", \"2md\": \"0\" }}\r\n    >\r\n      <SortField />\r\n      <FilterField product={product} />\r\n      <Button\r\n        disabled={!isChanging}\r\n        onClick={handleSearch}\r\n        colorScheme={\"blue\"}\r\n        w={\"100%\"}\r\n      >\r\n        Search\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box, Container, Flex, Grid, Heading} from \"@chakra-ui/react\";\r\nimport {SearchField} from \"../SearchField/SearchField\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ProductCard} from \"./ProductCard\";\r\nimport {nextPageAction, prevPageAction, searchRequestAction} from \"../../features/modules/search/search.actions\";\r\n\r\nexport const ProductsCards = ({ product }) => {\r\n  const dispatch = useDispatch()\r\n  const title = product === \"movie\" ? \"Movies\" : \"Tv\";\r\n  const products = useSelector((state) => state.search.products.results);\r\n  const sort = useSelector((state) => state.search.sort);\r\n  const release = useSelector((state) => state.search.release);\r\n  const genres = useSelector((state) => state.search.genres);\r\n  const certification = useSelector((state) => state.search.certification);\r\n  const totalPages = useSelector((state) => state.search.products.total_pages);\r\n  const page = useSelector((state) => state.search.products.page);\r\n  \r\n  const handleNext = (currentPage) => {\r\n    dispatch(nextPageAction())\r\n    dispatch(\r\n      searchRequestAction(\r\n        product,\r\n        sort,\r\n        release,\r\n        genres,\r\n        certification,\r\n        currentPage\r\n      )\r\n    );\r\n  }\r\n  \r\n  const handlePrev = (currentPage) => {\r\n    dispatch(prevPageAction())\r\n    dispatch(\r\n      searchRequestAction(\r\n        product,\r\n        sort,\r\n        release,\r\n        genres,\r\n        certification,\r\n        currentPage\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Container>\r\n        <Heading py={\"24px\"}>{title}</Heading>\r\n        <Flex\r\n          w={\"100%\"}\r\n          alignItems={{ base: \"center\", \"2md\": \"flex-start\" }}\r\n          flexDir={{ base: \"column\", \"2md\": \"row\" }}\r\n        >\r\n          <SearchField product={product} />\r\n          <Box flex={\"1 1 auto\"} w={{ base: \"100%\", \"2md\": \"auto\" }}>\r\n            <Grid\r\n              templateColumns=\"repeat(auto-fill, minmax(200px, 1fr))\"\r\n              gap={\"20px\"}\r\n              mb={\"50px\"}\r\n            >\r\n              {products &&\r\n                products.map((product) => (\r\n                  <ProductCard key={product.id} product={product} />\r\n                ))}\r\n            </Grid>\r\n            <Pagination nextAction={handleNext} prevAction={handlePrev} page={page} totalPages={totalPages}/>\r\n          </Box>\r\n        </Flex>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React, {useEffect} from \"react\";\r\nimport {Box} from \"@chakra-ui/react\";\r\nimport {ProductsCards} from \"../../components/ProductsCards/ProductsCards\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {searchDefaultAction} from \"../../features/modules/search/search.actions\";\r\n\r\nconst SerialsPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(searchDefaultAction(\"tv\", 1));\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      minH={\"100vh\"}\r\n      pt={{ base: \"100px\", \"2md\": \"0\" }}\r\n      pl={{ base: \"0\", \"2md\": \"56px\" }}\r\n      pb={\"50px\"}\r\n    >\r\n      <ProductsCards product={\"tv\"} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SerialsPage;\r\n"],"sourceRoot":""}