{"version":3,"sources":["components/Product/ProductTitle.jsx","core/getYear.js","core/formatDate.js","core/getGenres.js","core/getTime.js","theme/icons/PlayIcon.jsx","components/Product/ProductModal.jsx","core/getContentRaiting.js","components/Product/ProductSubtitle.jsx","core/setCrew.js","components/Product/ProductInfo.jsx","components/Product/ProductCasts.jsx","components/Product/ProductDetails.jsx","components/Product/ProductBackground.jsx","components/Product/Product.jsx","pages/ProductSerialPage/ProductSerialPage.jsx"],"names":["ProductTitle","date","title","release_date","mb","textAlign","base","fontSize","fontWeight","opacity","as","slice","formatDate","split","join","getGenres","genres","result","genre","push","name","getTime","runtime","hours","Math","trunc","minutes","PlayIcon","props","width","height","fill","d","ProductModal","key","trailer","isOpen","onClose","maxW","m","bg","p","src","frameBorder","allow","allowFullScreen","getContentRaiting","raiting","country","filterRaiting","filter","el","iso_3166_1","length","rating","release_dates","certification","ProductSubtitle","vote_average","releaseDate","productRunTime","productTitle","id","dispatch","useDispatch","toast","useToast","useDisclosure","onOpen","useState","setTrailer","favouriteList","useSelector","state","favourite","isFavourite","findIndex","movie","product","videos","buttonVariant","contentRaiting","content_raiting","results","useEffect","finalTrailer","direction","spacing","align","flexWrap","justifyContent","border","sm","alignItems","pr","RatedCircle","value","size","ml","onClick","removeFromFavouriteAction","addToFavouriteAction","addToFavourite","variant","icon","Star","_hover","mr","color","setCrew","crew","job","human","i","undefined","delete","map","sort","ProductInfo","tagline","productOverview","fontStyle","display","flexBasis","ProductCasts","casts","py","overflowX","w","h","pb","pos","cast","borderRadius","overflow","minW","profile_path","noImage","px","lineHeight","character","roles","episode_count","ProductDetails","original_title","original_language","budget","revenue","status","budgetProduct","revenueProduct","textTransform","ProductBackground","backdrop_path","zIndex","top","left","Product","data","poster_path","overview","first_air_date","episode_run_time","original_name","config","imageUrl","images","base_url","imageSize","backdrop_sizes","credits","idx","productName","pl","pt","flexDir","ProductSerialPage","useParams","history","useHistory","productRequestAction","listen","location","clearProductAction","serial","minH"],"mappings":"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","file":"static/js/9.e791bb1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Box, Heading, Stack} from \"@chakra-ui/react\";\r\nimport {getYear} from \"../../core/getYear\";\r\n\r\nexport const ProductTitle = ({ title, release_date }) => {\r\n  return (\r\n    <Stack mb={\"5px\"} textAlign={{ base: \"center\", \"3md\": \"left\" }}>\r\n      <Heading fontSize={{ base: \"26px\", \"3md\": \"33px\" }}>\r\n        {title}\r\n        <Box fontWeight={\"400\"} opacity={\"0.7\"} as={\"span\"}>\r\n          {getYear(release_date)}\r\n        </Box>\r\n      </Heading>\r\n    </Stack>\r\n  );\r\n};\r\n","export const getYear = (date) => {\r\n  return date && ` (${date.slice(0, 4)})`;\r\n};\r\n","export const formatDate = (date) => {\r\n  return date && date.split(\"-\").join(\"/\");\r\n};\r\n","export const getGenres = (genres) => {\r\n  const result = [];\r\n  if (genres) {\r\n    for (let genre of genres) {\r\n      result.push(genre.name);\r\n    }\r\n  }\r\n\r\n  return result.join(\", \");\r\n};\r\n","export const getTime = (runtime) => {\r\n  const hours = Math.trunc(runtime / 60);\r\n  const minutes = runtime % 60;\r\n  return (\r\n    (hours === 0 ? \"\" : hours + \"h\") + (minutes === 0 ? \"\" : minutes + \"m\")\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Icon} from \"@chakra-ui/icons\";\r\n\r\nexport const PlayIcon = (props) => {\r\n  return (\r\n    <Icon width=\"15px\" height=\"15px\" {...props}>\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M23 12l-22 12v-24l22 12zm-21 10.315l18.912-10.315-18.912-10.315v20.63z\"\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay,} from \"@chakra-ui/react\";\r\n\r\nexport const ProductModal = ({ trailer: { key }, isOpen, onClose }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent maxW={\"1440px\"} m={\"0\"}>\r\n        <ModalHeader fontWeight={\"400\"} bg={\"#000\"}>\r\n          Play Trailer\r\n        </ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody p={\"0\"}>\r\n          <iframe\r\n            width={\"100%\"}\r\n            height={\"768\"}\r\n            src={`https://www.youtube.com/embed/${key}`}\r\n            title={\"YouTube video player\"}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n","export const getContentRaiting = (raiting, country) => {\r\n  const filterRaiting =\r\n    raiting && country && raiting.filter((el) => el.iso_3166_1 === country);\r\n\r\n  if (filterRaiting && filterRaiting.length && filterRaiting[0].rating) {\r\n    return filterRaiting && filterRaiting.length > 0 && filterRaiting[0].rating;\r\n  }\r\n\r\n  return (\r\n    filterRaiting &&\r\n    filterRaiting.length > 0 &&\r\n    filterRaiting[0].release_dates[0].certification\r\n  );\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Flex, IconButton, Stack, useDisclosure, useToast,} from \"@chakra-ui/react\";\r\nimport {formatDate} from \"../../core/formatDate\";\r\nimport {getGenres} from \"../../core/getGenres\";\r\nimport {getTime} from \"../../core/getTime\";\r\nimport {RatedCircle} from \"../../common/RatedCircle\";\r\nimport {PlayIcon} from \"../../theme/icons/PlayIcon\";\r\nimport {ProductModal} from \"./ProductModal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StarIcon} from \"@chakra-ui/icons\";\r\nimport {getContentRaiting} from \"../../core/getContentRaiting\";\r\nimport {addToFavouriteAction, removeFromFavouriteAction,} from \"../../features/modules/favourite/favourite.actions\";\r\nimport {addToFavourite} from \"../../core/addToFavourite\";\r\n\r\nexport const ProductSubtitle = ({\r\n  genres,\r\n  vote_average,\r\n  releaseDate,\r\n  productRunTime,\r\n  productTitle,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [trailer, setTrailer] = useState({});\r\n  const favouriteList = useSelector((state) => state.favourite.favouriteList);\r\n  const isFavourite =\r\n    favouriteList && favouriteList.findIndex((movie) => movie.id === id) !== -1;\r\n  const product = useSelector((state) => state.product.product);\r\n  const videos = useSelector((state) => state.product.videos);\r\n  const buttonVariant = !isFavourite ? \"circle\" : \"circleActive\";\r\n  const contentRaiting = useSelector(\r\n    (state) => state.product.content_raiting.results\r\n  );\r\n  const setStatus = () => dispatch(setStatusAction());\r\n\r\n  useEffect(() => {\r\n    if (videos.id) {\r\n      const finalTrailer = videos.results.filter(\r\n        (el) => el.name.split(\" \")[1] === \"Trailer\"\r\n      )[0];\r\n      setTrailer(finalTrailer);\r\n    }\r\n  }, [videos]);\r\n\r\n  const handleFavourite = () => {\r\n    if (!isFavourite) {\r\n      dispatch(addToFavouriteAction(product));\r\n    } else {\r\n      dispatch(removeFromFavouriteAction(id));\r\n    }\r\n\r\n    addToFavourite(productTitle, isFavourite, toast);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        mb={\"10px\"}\r\n        direction={\"row\"}\r\n        spacing={\"15px\"}\r\n        fontWeight={\"400\"}\r\n        fontSize={\"14px\"}\r\n        align={\"center\"}\r\n        flexWrap={\"wrap\"}\r\n        justifyContent={{ base: \"center\", \"3md\": \"flex-start\" }}\r\n      >\r\n        {getContentRaiting(contentRaiting, \"US\") && (\r\n          <Box opacity={\"0.6\"} p={\"3px\"} border={\"1px solid white\"}>\r\n            {getContentRaiting(contentRaiting, \"US\")}\r\n          </Box>\r\n        )}\r\n        {formatDate(releaseDate) && <Box>{formatDate(releaseDate)}</Box>}\r\n        {getGenres(genres) && <Box>{getGenres(genres)}</Box>}\r\n        {productRunTime && <Box>{getTime(productRunTime)}</Box>}\r\n      </Stack>\r\n      <Flex\r\n        mb={\"50px\"}\r\n        justifyContent={{\r\n          base: \"flex-start\",\r\n          sm: \"center\",\r\n          \"3md\": \"flex-start\",\r\n        }}\r\n      >\r\n        <Stack\r\n          direction={{ base: \"column\", sm: \"row\" }}\r\n          spacing={\"15px\"}\r\n          alignItems={{ base: \"flex-start\", sm: \"center\" }}\r\n        >\r\n          <Flex alignItems={\"center\"} pr={\"10px\"}>\r\n            <RatedCircle\r\n              value={vote_average}\r\n              size={{ base: \"50px\", sm: \"70px\" }}\r\n            />\r\n            <Box ml={\"10px\"}>User score</Box>\r\n          </Flex>\r\n          <IconButton\r\n            onClick={handleFavourite}\r\n            variant={buttonVariant}\r\n            aria-label=\"Add to favourite\"\r\n            icon={<StarIcon />}\r\n          />\r\n          {trailer && (\r\n            <Flex\r\n              as={\"button\"}\r\n              onClick={onOpen}\r\n              alignItems={\"center\"}\r\n              _hover={{ opacity: \"0.6\" }}\r\n            >\r\n              <Box mr={\"10px\"}>Watch trailer</Box>\r\n              <PlayIcon color={\"#fff\"} />\r\n            </Flex>\r\n          )}\r\n        </Stack>\r\n      </Flex>\r\n      {trailer && (\r\n        <ProductModal trailer={trailer} isOpen={isOpen} onClose={onClose} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const setCrew = (crew) => {\r\n  const result = [];\r\n\r\n  for (let key of crew) {\r\n    if (\r\n      key.job === \"Story\" ||\r\n      key.job === \"Characters\" ||\r\n      key.job === \"Director\" ||\r\n      key.job === \"Novel\" ||\r\n      key.job === \"Writer\" ||\r\n      key.job === \"Screenplay\"\r\n    ) {\r\n      const human = {\r\n        name: key.name,\r\n        job: [key.job],\r\n      };\r\n\r\n      result.push(human);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < result.length; i++) {\r\n    if (result[i + 1] !== undefined && result[i].name === result[i + 1].name) {\r\n      result[i].job = [...result[i].job, ...result[i + 1].job];\r\n      result[i + 1].delete = true;\r\n    }\r\n  }\r\n\r\n  return result\r\n    .filter((el) => !el.delete)\r\n    .map((el) => {\r\n      el.job.sort();\r\n\r\n      return el;\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport {Box, List, ListItem, Text} from \"@chakra-ui/react\";\r\nimport {setCrew} from \"../../core/setCrew\";\r\n\r\nexport const ProductInfo = ({ crew, tagline, productOverview }) => {\r\n  return (\r\n    <>\r\n      <Box mb={\"20px\"}>\r\n        <Box\r\n          mb={\"10px\"}\r\n          fontWeight={\"400\"}\r\n          fontStyle={\"italic\"}\r\n          opacity={\"0.7\"}\r\n        >\r\n          {tagline}\r\n        </Box>\r\n        <Box fontSize={\"24px\"} mb={\"10px\"}>\r\n          Overview\r\n        </Box>\r\n        <Text fontWeight={\"400\"} fontSize={{ base: \"16px\", \"3md\": \"18px\" }}>\r\n          {productOverview}\r\n        </Text>\r\n      </Box>\r\n      <List display={\"flex\"} flexWrap={\"wrap\"} justifyContent={\"flex-start\"}>\r\n        {crew &&\r\n          setCrew(crew).map((crew, id) => (\r\n            <ListItem key={id} flexBasis={\"33%\"} mb={\"14px\"} pr={\"20px\"}>\r\n              <Box fontSize={\"16px\"}>{crew.name}</Box>\r\n              <Box fontWeight={\"400\"} fontSize={\"14px\"}>\r\n                {crew.job.join(\", \")}\r\n              </Box>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box, HStack, Image} from \"@chakra-ui/react\";\r\nimport noImage from \"../../assets/no-image.png\";\r\n\r\nexport const ProductCasts = ({ casts, product }) => {\r\n  return (\r\n    <Box py={\"30px\"}>\r\n      <Box fontSize={\"24px\"} mb={\"30px\"}>\r\n        Top Billed Cast\r\n      </Box>\r\n      <HStack\r\n        overflowX={\"scroll\"}\r\n        w={\"100%\"}\r\n        h={\"315px\"}\r\n        pb={\"15px\"}\r\n        pos={\"relative\"}\r\n      >\r\n        {casts.map((cast) => (\r\n          <Box\r\n            borderRadius={\"8px\"}\r\n            overflow={\"hidden\"}\r\n            key={cast.id}\r\n            h={\"100%\"}\r\n            minW={\"140px\"}\r\n            w={\"140px\"}\r\n            bg={\"#fff\"}\r\n            color={\"black\"}\r\n          >\r\n            <Image\r\n              mb={\"10px\"}\r\n              w={\"100%\"}\r\n              h={\"175px\"}\r\n              src={\r\n                cast.profile_path\r\n                  ? `https://image.tmdb.org/t/p/w138_and_h175_face${cast.profile_path}`\r\n                  : noImage\r\n              }\r\n            />\r\n            <Box px={\"5px\"}>\r\n              <Box mb={\"5px\"} lineHeight={\"1\"} fontSize={\"18px\"}>\r\n                {cast.name}\r\n              </Box>\r\n              <Box fontSize={\"14px\"} fontWeight={\"400\"}>\r\n                {product === \"movie\" ? (\r\n                  cast.character\r\n                ) : (\r\n                  <>\r\n                    <Box>{cast.roles[0].character}</Box>\r\n                    <Box opacity={\"0.5\"}>\r\n                      {cast.roles[0].episode_count + \" episodes\"}\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </HStack>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box, VStack} from \"@chakra-ui/react\";\r\n\r\nexport const ProductDetails = ({\r\n  original_title,\r\n  original_language,\r\n  budget,\r\n  revenue,\r\n  status,\r\n}) => {\r\n  const budgetProduct = budget ? \"$\" + budget : \"-\";\r\n  const revenueProduct = revenue ? \"$\" + revenue : \"-\";\r\n\r\n  return (\r\n    <Box p={\"30px 0\"}>\r\n      <Box fontSize={\"24px\"} mb={\"30px\"}>\r\n        More Details\r\n      </Box>\r\n      <VStack alignItems={\"flex-start\"} spacing={\"30px\"}>\r\n        <Box>\r\n          <Box>Original title</Box>\r\n          <Box fontWeight={\"400\"} fontSize={\"16px\"}>\r\n            {original_title}\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box>Original language</Box>\r\n          <Box textTransform={\"uppercase\"} fontWeight={\"400\"} fontSize={\"16px\"}>\r\n            {original_language}\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box>Status</Box>\r\n          <Box fontWeight={\"400\"} fontSize={\"16px\"}>\r\n            {status}\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box>Budget</Box>\r\n          <Box fontWeight={\"400\"} fontSize={\"16px\"}>\r\n            {budgetProduct}\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Box>Revenue</Box>\r\n          <Box fontWeight={\"400\"} fontSize={\"16px\"}>\r\n            {revenueProduct}\r\n          </Box>\r\n        </Box>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box} from \"@chakra-ui/react\";\r\n\r\nexport const ProductBackground = ({ backdrop_path }) => {\r\n  return (\r\n    <Box\r\n      zIndex={\"1\"}\r\n      bg={\r\n        backdrop_path\r\n          ? \"linear-gradient(to right, rgba(7.84%, 8.63%, 11.37%, 1.00) 150px, rgba(7.84%, 8.63%, 11.37%, 0.84) 100%)\"\r\n          : \"#22252a\"\r\n      }\r\n      w={\"100%\"}\r\n      h={\"100%\"}\r\n      pos={\"absolute\"}\r\n      top={\"0\"}\r\n      left={\"0\"}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Box, Container, Flex, Image} from \"@chakra-ui/react\";\r\nimport {ProductTitle} from \"./ProductTitle\";\r\nimport {ProductSubtitle} from \"./ProductSubtitle\";\r\nimport {ProductInfo} from \"./ProductInfo\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProductCasts} from \"./ProductCasts\";\r\nimport {ProductDetails} from \"./ProductDetails\";\r\nimport noImage from \"../../assets/no-image.png\";\r\nimport {ProductBackground} from \"./ProductBackground\";\r\n\r\nexport const Product = ({\r\n  data: {\r\n    backdrop_path,\r\n    title,\r\n    release_date,\r\n    genres,\r\n    runtime,\r\n    poster_path,\r\n    overview,\r\n    vote_average,\r\n    tagline,\r\n    first_air_date,\r\n    name,\r\n    episode_run_time,\r\n    original_title,\r\n    original_name,\r\n    original_language,\r\n    budget,\r\n    revenue,\r\n    status,\r\n    id,\r\n  },\r\n}) => {\r\n  const config = useSelector((state) => state.data.config);\r\n  const imageUrl = config && config.images.base_url;\r\n  const imageSize = config && config.images.backdrop_sizes[2];\r\n  const credits = useSelector((state) => state.product.credits);\r\n  const casts = credits.cast && credits.cast.filter((el, idx) => idx < 16);\r\n  const releaseDate = first_air_date ? first_air_date : release_date;\r\n  const productName = original_name ? original_name : original_title;\r\n  const productTitle = name ? name : title;\r\n  const productRunTime = episode_run_time ? episode_run_time[0] : runtime;\r\n  const productOverview = overview ? overview : \"No description\";\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        pos={\"relative\"}\r\n        bg={\r\n          backdrop_path &&\r\n          `url(${imageUrl}${imageSize}/${backdrop_path}) right -200px top / cover no-repeat`\r\n        }\r\n        pl={{ base: \"0\", \"2md\": \"56px\" }}\r\n        pt={{ base: \"100px\", \"2md\": \"30px\" }}\r\n        pb={\"30px\"}\r\n      >\r\n        <ProductBackground backdrop_path={backdrop_path} />\r\n        <Flex justifyContent={\"center\"} px={\"15px\"}>\r\n          <Flex\r\n            flexDir={{ base: \"column\", \"3md\": \"row\" }}\r\n            w={\"100%\"}\r\n            maxW={\"1400px\"}\r\n            justifyContent={\"flex-start\"}\r\n            alignItems={{ base: \"center\", \"3md\": \"flex-start\" }}\r\n            w={\"100%\"}\r\n            pos={\"relative\"}\r\n            zIndex={\"2\"}\r\n          >\r\n            <Image\r\n              mb={{ base: \"15px\", \"3md\": \"0\" }}\r\n              borderRadius={\"10px\"}\r\n              maxW={\"none\"}\r\n              minW={\"300px\"}\r\n              w={\"300px\"}\r\n              h={\"450px\"}\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                  : noImage\r\n              }\r\n            />\r\n            <Box p={{ base: \"0\", \"3md\": \"10px 0 10px 30px\" }}>\r\n              <ProductTitle title={productTitle} release_date={releaseDate} />\r\n              <ProductSubtitle\r\n                genres={genres}\r\n                vote_average={vote_average}\r\n                releaseDate={releaseDate}\r\n                productRunTime={productRunTime}\r\n                productTitle={productTitle}\r\n                id={id}\r\n              />\r\n              <ProductInfo\r\n                crew={credits.crew}\r\n                productOverview={productOverview}\r\n                tagline={tagline}\r\n              />\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n      <Container maxW={\"1400px\"} pl={{ base: \"15px\", \"2md\": \"71px\" }}>\r\n        {casts && casts.length > 0 && <ProductCasts casts={casts} product={name ? \"tv\" : \"movie\"} />}\r\n        <ProductDetails\r\n          original_title={productName}\r\n          original_language={original_language}\r\n          budget={budget}\r\n          revenue={revenue}\r\n          status={status}\r\n        />\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React, {useEffect} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Box} from \"@chakra-ui/react\";\r\nimport {Product} from \"../../components/Product/Product\";\r\nimport {clearProductAction, productRequestAction} from \"../../features/modules/product/product.actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ProductSerialPage = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(productRequestAction(id, \"tv\"));\r\n  \r\n    return history.listen((location) => {\r\n      dispatch(clearProductAction())\r\n    })\r\n  }, []);\r\n\r\n  const serial = useSelector((state) => state.product.product);\r\n\r\n  return (\r\n    <Box minH={\"100vh\"}>\r\n      <Product id={id} data={serial} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductSerialPage;\r\n"],"sourceRoot":""}